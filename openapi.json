{
  "openapi": "3.0.3",
  "info": {
    "title": "Pokétroc",
    "description": "Application qui permet aux utilisateurs de lister leurs cartes pokémon, de les échanger ainsi que de chercher des cartes qu’ils aimeraient acquérir.",
    "version": "1.1.0",
    "contact": { "url": "https://github.com/nicolaswunderle/poketroc" }
  },
  "servers": [{ "url": "https://poketroc.onrender.com/api" }],
  "tags": [
    {
      "name": "dresseur",
      "description": ""
    },
    {
      "name": "carte",
      "description": ""
    },
    {
      "name": "échange",
      "description": ""
    },
    {
      "name": "message",
      "description": ""
    }
  ],
  "paths": {
    "/cartes": {
      "post": {
        "summary": "Créer une carte",
        "tags": ["carte"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarteData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Création réussie.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carte"
                }
              }
            }
          },
          "422": {
            "description": "Échec de la création.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarteValidationErreur"
                }
              }
            }
          }
        }
      }
    },

    "/cartes/{carteId}": {
      "get": {
        "summary": "Afficher carte dresseur",
        "tags": ["carte"],
        "parameters": [
          {
            "name": "carteId",
            "in": "path",
            "description": "Identifiant de la carte",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La carte a été affichée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carte"
                }
              }
            }
          },
          "404": {
            "description": "La carte n'est pas affichée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartePasAffichee"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Modifier partiellement la carte du dresseur",
        "tags": ["carte"],
        "parameters": [
          {
            "name": "carteId",
            "in": "path",
            "description": "Identifiant de la carte",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarteDataPartiel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Modification réussie.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carte"
                }
              }
            }
          },
          "404": {
            "description": "La carte n'a pas été modifiée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartePasModifiee"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Supprimer la carte",
        "tags": ["carte"],
        "parameters": [
          {
            "name": "carteId",
            "in": "path",
            "description": "Identifiant de la carte",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "La carte a été correctement supprimée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarteSupprimee"
                }
              }
            }
          },
          "404": {
            "description": "La carte n'a pas été supprimée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartePasSupprimee"
                }
              }
            }
          }
        }
      }
    },

    "/cartes/{dresseurId}?statut={collectee, souhaitee}&page={number}&pageSize={number}": {
      "get": {
        "summary": "Afficher toutes les cartes du dresseur en fonction du statut.",
        "tags": ["carte"],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "path",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statut",
            "in": "query",
            "description": "Statut des cartes (collectee, souhaitee)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["collectee", "souhaitee"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Numéro de la page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Taille de la page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des cartes du dresseur avec le statut spécifié est affichée corectement.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListeCarte"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Liste des cartes du dresseur avec le statut spécifié n'est pas affichée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListeCartePasAffichee"
                }
              }
            }
          }
        }
      }
    },

    "/dresseurs": {
      "post": {
        "summary": "Inscription à l'application",
        "tags": ["dresseur"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DresseurData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Inscription réussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dresseur"
                }
              }
            }
          },
          "422": {           
                  "$ref": "#/components/messages/DresseurValidationErreur"
            
          }
        }
      }
    },

    "/dresseurs/connexion": {
      "post": {
        "summary": "Connexion au compte dresseur",
        "tags": ["dresseur"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/connexion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Connexion réussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connexionReussie"
                }
              }
            }
          },
          "401": { 
                  "$ref": "#/components/schemas/connexionEchouee"       
          },
          "422": {
                  "$ref": "#/components/schemas/connexionErreur" 
          }
        }
      },

      "delete": {
        "summary": "Deconnexion au compte dresseur",
        "tags": ["dresseur"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/connexion",
                "type": "object",
                "properties": {
                  "pseudo": {
                    "type": "string",
                    "description": "Le pseudo du dresseur",
                    "example": "Nerak"
                  },
                  "mot_de_passe": {
                    "type": "string",
                    "description": "Le mot de passe du compte dresseur",
                    "example": "unMotDePasse88"
                  }
                },
                "required": ["pseudo", "mot_de_passe"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Déconnexion réussie"
          },            
          "404":{
            "$ref": "#/components/schemas/deconnexionEchouee"
                }    
        }
      }
    },

    "dresseurs/{dresseurId}": {
      "get": {
        "summary": "Afficher le dresseur",
        "tags": ["dresseur"],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "path",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Le dresseur a été affiché",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dresseur"
                }
              }
            }
          },
          "404": {
                  "$ref": "#/components/schemas/DresseurEstPasAffiche"
          }
        }
      },
      "delete": {
        "summary": "Supprimer le compte du dresseur",
        "tags": ["dresseur"],
        "securitySchemes": ["JWT"],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "path",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Le dresseur a été supprimé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DresseurSupprime"
                }
              }
            }
          },
          "404":{
              "$ref": "#/components/schemas/DresseurIntrouvable"
                }
        }
      }
    },
    "poketroc/profil/modification/mot-de-passe": {
      "put": {
        "summary": "Modifier le mot de passe-----------------------------------------------------",
        "tags": ["dresseur"]
      }
    },
    "poketroc/profil/modification": {
      "put": {
        "summary": "Modifier profil du dresseur en entier---------------------------------------",
        "tags": ["dresseur"],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "path",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DresseurData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dresseur"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Modifier profil du dresseur en partie---------------------------------------",
        "tags": ["dresseur"],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "path",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DresseurDataPartiel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dresseur"
                }
              }
            }
          }
        }
      }
    },
    "poketroc/deck": {
      "get": {
        "summary": "Afficher le deck du dresseur-------------------------------------------------",
        "tags": ["carte"],
        "parameters": [
          {
            "name": "num_carte",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "example": 114,
              "minimum": 0,
              "maximum": 1000
            }
          },
          {
            "name": "quantite",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "série",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "écarlate et violet",
                "épée et bouclier",
                "soleil et lune",
                "xy",
                "noir et blanc"
              ],
              "example": "xy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Carte"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/echanges": {
      "post": {
        "summary": "Créer un échange",
        "tags": ["échange"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EchangeData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "L'échange a été crée avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Echange"
                }
              }
            }
          },
          "422": {
            "description": "L'échange n'a pas été crée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EchangeValidationErreur"
                }
              }
            }
          }
        }
      }
    },
    "/echanges/{echangeId}": {
      "get": {
        "summary": "Afficher un échange",
        "tags": ["échange"],
        "parameters": [
          {
            "name": "echangeId",
            "in": "path",
            "description": "Identifiant de l'échange.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "L'échange est affiché.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Echange"
                }
              }
            }
          },
          "404": {
            "description": "L'échange n'est pas affiché.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EchangePasAffiche"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Modifier quelques informations d'un échange",
        "tags": ["échange"],
        "parameters": [
          {
            "name": "echangeId",
            "in": "path",
            "description": "Identifiant de l'échange.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EchangeData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "L'échange a été modifié.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Echange"
                }
              }
            }
          },
          "404": {
            "description": "L'échange n'a pas pu être modifié.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EchangePasModifie"
                }
              }
            }
          },
          "422": {
            "description": "L'échange n'a pas pu être modifié.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EchangeValidationErreur"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Supprimer un échange",
        "tags": ["échange"],
        "parameters": [
          {
            "name": "echangeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "L'échange a été supprimé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EchangeSupprime"
                },
                "404": {
                  "description": "L'échange n'a pas été supprimé.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/EchangePasSupprime"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/echanges/{dresseurId}": {
      "get": {
        "summary": "Afficher tous les échanges du dresseur",
        "tags": ["échange"],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "path",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Les échanges sont affichés.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Echange"
                }
              }
            }
          },
          "404": {
            "description": "Les échanges ne sont pas affichés.",
            "$ref": "#/components/responses/EchangesPasAffiche"
          }
        }
      }
    },
    "/echanges/proposes?tri={nouveaute,pertinence}&page={number}&pageSize={number}": {
      "get": {
        "summary": "Afficher tous les échanges proposés",
        "tags": ["échange"],
        "parameters": [
          {
            "name": "tri",
            "in": "query",
            "description": "Critère de tri des échanges (nouveaute, pertinence)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["nouveaute", "pertinence"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Numéro de la pages",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Taille de la page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des échanges proposés est affichée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Echange"
                }
              }
            }
          },
          "404": {
            "description": "La liste des échanges proposés n'est pas affichée.",
            "$ref": "#/components/responses/EchangesPasTrouves"
          }
        }
      }
    },
    "/echanges/{dresseurId}?etat={accepte, attente, refuse}": {
      "get": {
        "summary": "Afficher les échanges du dresseur en fonction de l'état",
        "tags": ["échange"],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "query",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "état",
            "in": "query",
            "description": "État des échanges (accepte, attente, refuse)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["accepte", "attente", "refuse"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La Liste des échanges du dresseur en fonction de l'état.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Echange"
                }
              }
            }
          },
          "404": {
            "description": "La Liste des échanges du dresseur en fonction de l'état n'est pas affichée.",
            "$ref": "#/components/responses/EchangesPasAffiche"
          }
        }
      }
    },




    "messages/{echangeId}": {
      "get": {
        "summary": "Afficher tous les messages d'un échange-----------------------------------------------------------",
        "tags": ["message"],
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Conversation d'un échange.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message trouvé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "description": "Message non trouvé."
          }
        }
      },

      "delete": {
        "summary": "Supprimer un message-----------------------------------------------------------",
        "tags": ["message"],
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Le message a supprimer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Le message à été supprimé avec succès."
          },
          "404": {
            "description": "Message non trouvé."
          }
        }
      }
    },  
      
    "messages/{messageId}": {
        "get": {
          "summary": "Afficher conversations-----------------------------------------------------",
          "tags": ["message"],
          "parameters": [
            {
              "name": "pseudo",
              "in": "query",
              "description": "Affichage du message.",
              "schema": {
                "type": "string",
                "example": "AniraC"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Message"
                    }
                  }
                }
              }
            }
          }
        }               
      },

      "messages":{
        "post": {
          "summary": "Créer un message-----------------------------------------------------------",
          "tags": ["message"],
          "requestBody": {
            "description": "Le message à créer.",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message",
                  "type": "object",
                  "properties": {
                    "contenu": {
                      "type": "string",
                      "description": "Le contenu du message",
                      "example": "Salut! Cette carte m'intéresse."
                    },
                    "expéditeur": {
                      "type": "string",
                      "description": "L'expéditeur du message.",
                      "example": "Salocin"
                    },
                    "destinataire": {
                      "type": "string",
                      "description": "Le destinataire du message.",
                      "example": "Enirehtac"
                    }
                  },
                  "required": ["contenu", "expéditeur", "destinataire"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Message créé avec succès.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            },
            "404": {
              "description": "Destinataire manquant.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MessageValidationErreur"
                  }
                }
              }
            }
          }
        }
      }
    },





    "components": {
      "messages": {
        "DresseurValidationErreur": {
          "description": "Echec de l'inscription.",
          "content":{
              "text/plain":{
              "example": "Inscription échouée."
            }
          }
        }
      },
      "schemas": {

        "CartePasAffichee":{
          "description": "La carte n'est pas affichée.",
          "content": {
            "text/plain": {
              "example": "La carte n'est pas affichée."
            }
          }
        },
        "CarteData":{
          "description": "La carte à créer.",
          "type": "object",
          "properties": {
                  "id_api": {
                    "type": "string",
                    "description": "Le numéro de la carte",
                    "example": "aaab"
                  },
                  "etat": {
                    "type": "string",
                    "description": "L'état de la carte",
                    "enum": ["neuve", "excellente", "très bonne", "bonne", "moyenne", "mauvaise"],
                    "example": "neuve"
                  },
                  "desc_etat": {
                    "type": "string",
                    "description": "La description de l'état de la carte",
                    "example": "Très bon état. Aucune éraflure"
                  },
                  "statut": {
                    "type": "string",
                    "description": "Le statut de la carte",
                    "enum": ["collectée", "en échange", "souhaitée"],
                    "example": "collectée"
                  },
                  "type": {
                    "type": "string",
                    "description": "Le type de la carte",
                    "enum": ["reverse", "holo", "rien"]
                  },
                  "quantite": {
                    "type": "integer",
                    "description": "La quantité de la carte",
                    "example": 1
                  },
                  "serie": {
                    "type": "string",
                    "description": "La série de la carte",
                    "enum": [
                      "écarlate et violet",
                      "épée et bouclier",
                      "soleil et lune",
                      "xy",
                      "noir et blanc"
                    ],
                    "example": "xy"
                  }
                },
                "required": [
                  "id_api",
                  "etat",
                  "desc_etat",
                  "statut",
                  "type",
                  "quantite",
                  "serie"
                ]
              
        },
      "CarteValidationErreur": {
        "description": "Echec de la création.",
        "content": {
          "text/plain": {
            "example": "La carte n'a pas été créée."
          }
        }
      },
        "DresseurSupprime":{
          "description": "Le dresseur a été supprimé.",
          "content": {
            "text/plain": {
              "example": "Le dresseur a été supprimé."
            }
          }
        },
        "DresseurEstPasAffiche":{
          "description": "Le dresseur n'a pas été affiché.",
          "content":{
              "text/plain":{
              "example": "Le dresseur ne s'affiche pas."
            }
          }
        },
        "connexionErreur":{
          "description": "Mots de passe ou pseudo incorrect",
          "content":{
              "text/plain":{
              "example": "Connexion échouée, veuillez retenter."
            }
          }
        },
        "connexionEchouee": {
          "description": "Mots de passe ou pseudo incorrect",
          "content":{
              "text/plain":{
              "example": "Mots de passe ou pseudo incorrect."
            }
          }
        },
        "connexion": {
          "type": "object",
          "properties": {
            "pseudo": {
              "type": "string",
              "description": "Le pseudo du dresseur",
              "example": "Nerak"
            },
            "mot_de_passe": {
              "type": "string",
              "description": "Le mot de passe du compte dresseur",
              "example": "unMotDePasse88"
            }
          },
          "required": ["pseudo", "mot_de_passe"]
        },
        "deconnexionReussie": {
          "description": "Déconnexion réussie.",
          "content":{
              "text/plain":{
              "example": "Déconnexion réussie."
              }
            }
          },
          "deconnexionEchouee": {
            "description": "Déconnexion échouée.",
            "content":{
              "text/plain":{
              "example": "Échec de la déconnexion. Une erreur interne s'est produite. Veuillez contacter le support technique pour plus d'assistance."
              }
            }
          },
        "connexionReussie": {
          "type": "object",
          "example": "Connexion réussie"
          },
        
        "Dresseur": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "",
              "example": "7fe91a9a41bc839033eedf0f"
            },
            "nom": {
              "type": "string",
              "description": "",
              "maxlength": 40,
              "example": "Fonseca"
            },
            "prenom": {
              "type": "string",
              "description": "",
              "maxlength": 40,
              "example": "Carina"
            },
            "pseudo": {
              "type": "string",
              "description": "",
              "maxlength": 40,
              "example": "AniraC"
            },
            "email": {
              "type": "string",
              "description": "",
              "example": "adresse@email.ch"
            },
            "age": {
              "type": "integer",
              "description": "",
              "minimum": 1,
              "maximum": 200,
              "example": 25
            },
            "ville": {
              "type": "string",
              "description": "",
              "maxlength": 60,
              "example": "Genève"
            },
            "image":{
              "type": "string",
              "description": "",
              "example": "https://p1.hiclipart.com/preview/553/126/513/pikachu-i-choose-you-pikachu-icon-png-icon.jpg"
          }
          },
          "required": [
            "id",
            "nom",
            "prenom",
            "pseudo",
            "email",
            "mot_de_passe",
            "age",
            "ville"
          ]
        },
        "DresseurData": {
          "type": "object",
          "properties": {
            "nom": {
              "type": "string",
              "description": "",
              "maxlength": 40,
              "example": "Fonseca"
            },
            "prenom": {
              "type": "string",
              "description": "",
              "maxlength": 40,
              "example": "Carina"
            },
            "mot_de_passe": {
              "type": "string",
              "description": "",
              "example": "unMotDePasse32"
            },
            "pseudo": {
              "type": "string",
              "description": "",
              "maxlength": 40,
              "example": "AniraC"
            },
            "email": {
              "type": "string",
              "description": "",
              "example": "adresse@email.ch"
            },
            "age": {
              "type": "number",
              "description": "",
              "minimum": 1,
              "maximum": 200,
              "example": 25
            },
            "ville": {
              "type": "string",
              "description": "",
              "maxlength": 60,
              "example": "Genève"
            } 
          },
          "required": ["prenom", "nom","pseudo", "email", "age", "ville"]
        
        },
        "DresseurDataPartiel": {
          "type": "object",
          "properties": {
            "nom": {
              "type": "string",
              "description": "",
              "minlength": 3,
              "maxlength": 40,
              "example": "Fonseca"
            },
            "prenom": {
              "type": "string",
              "description": "",
              "minlength": 3,
              "maxlength": 15,
              "example": "Carina"
            },
            "pseudo": {
              "type": "string",
              "description": "",
              "example": "AniraC"
            },
            "email": {
              "type": "string",
              "description": "",
              "example": "adresse@email.ch"
            },
            "mot_de_passe": {
              "type": "string",
              "description": "",
              "example": "unMotDePasse32"
            },
            "age": {
              "type": "number",
              "description": "",
              "minimum": 0,
              "maximum": 100,
              "example": 25
            },
            "ville": {
              "type": "string",
              "description": "",
              "example": "Genève"
            }
          }
        },
        "Carte": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "L'identifiant unique de la carte",
              "example": "7xy10-117"
            },
            "id_api": {
              "type": "string",
              "description": "L'identifiant de l'api",
              "example": "aaab",
              "unique": true
            },
            "etat": {
              "type": "string",
              "description": "L'état unique de la carte",
              "enum": ["neuve", "excellente", "très bonne", "bonne", "moyenne", "mauvaise"],
              "example": "neuve",
              "unique": true
            },
            "desc_etat": {
              "type": "string",
              "description": "La description de l'état unique de la carte",
              "maxlength": 255,
              "example": "Très bon état. Aucune éraflure",
              "unique": true
            },
            "statut": {
              "type": "string",
              "description": "Le statut de la carte",
              "enum": ["collectée","souhaitée"],
              "example": "collectée"
            },
            "type": {
              "type": "string",
              "description": "Le type unique de la carte",
              "enum": ["normale", "reverse", "holo"],
              "unique": true
            },
            "quantite": {
              "type": "number",
              "description": "La quantité de la carte",
              "minimum":1,
              "maximum": 1000,
              "example": 1
            },
            "dresseur_id":{
              "type": "string",
              "description": "L'identifiant unique d'un dresseur qui possède la carte",
              "example": "7fe91a9a41bc839033eedf0f"
            },
            "dresseur":{
              "type": "string",
              "$ref": "#/components/schemas/Dresseur"
            }
          },
             "required": [
              "id",
            "id_api",
            "etat",
            "desc_etat",
            "statut",
            "type",
            "quantite",
            "dresseur_id"
          ]
        },
        "CarteDataPartial": {
          "type": "object",
          "properties": {
            "etat": {
              "type": "string",
              "description": "L'état unique de la carte",
              "enum": ["neuve", "excellente", "très bonne", "bonne", "moyenne", "mauvaise"],
              "example": "neuve",
              "unique": true
            },
            "desc_etat": {
              "type": "string",
              "description": "La description de l'état unique de la carte",
              "maxlength": 255,
              "example": "Très bon état. Aucune éraflure",
              "unique": true
            },
            "statut": {
              "type": "string",
              "description": "Le statut de la carte",
              "enum": ["collectée","souhaitée"],
              "example": "collectée"
            },
            "type": {
              "type": "string",
              "description": "Le type unique de la carte",
              "enum": ["normale", "reverse", "holo"],
              "unique": true
            },
            "quantite": {
              "type": "number",
              "description": "La quantité de la carte",
              "minimum":1,
              "maximum": 1000,
              "example": 1
            },
            "dresseur_id":{
              "type": "string",
              "description": "L'identifiant unique d'un dresseur qui possède la carte",
              "example": "7fe91a9a41bc839033eedf0f"
            }
          }
        },
        "CarteEchange": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "",
              "example": "7fe91a9a41bc839033eedf0f"
            },
            "id_api": {
              "type": "string",
              "description": "",
              "example": "aaab",
              "unique":true
            },
            "etat": {
              "type": "string",
              "description": "",
              "enum": ["neuve", "excellente", "très bonne", "bonne", "moyenne", "mauvaise"],
              "example": "neuve",
              "unique": true
            },
            "desc_etat": {
              "type": "string",
              "description": "",
              "maxlength": 255,
              "exemple": "Très bon état. Aucune éraflure",
              "unique": true
            },
            "type": {
              "type": "string",
              "description": "",
              "enum": ["normale", "reverse", "holo"],
              "unique": true
            },
            "possedee_par": {
              "type": "string",
              "description": "",
              "example": "7fe91a9a41bc839033eedf0f"
            },
            "ville": {
              "type": "string",
              "description": "",
              "example": "Genève"
            }
          },
          "required": [
            "id",
            "id_api",
            "etat",
            "desc_etat",
            "type",
            "possedee_par",
            "ville"
          ]
        },
        "Echange": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "",
              "example": "7fe91a9a41bc839033eedf0f"
            },
            "date": {
              "type": "string",
              "description": "",
              "format": "data-time",
              "example": "2023-01-01T00:00:00Z",
              "unique": true
            },
            "etat": {
              "type": "string",
              "description": "",
              "enum": ["accepte", "attente","refus"],
              "example": "attente"
            },
            "dresseur_cree_id": {
              "type": "string",
              "description": "",
              "$ref": "#/components/schemas/Dresseur",
              "unique": true
          },
          "dresseur_concerne_id": {
            "type": "string",
            "description": "",
            "$ref": "#/components/schemas/Dresseur"
          },
          "required": ["id", "date","dresseur_cree_id", "dresseur_concerne_id"]
        },
        "schemas": {

          "CartePasAffichee":{
            "description": "La carte n'est pas affichée.",
            "content": {
              "text/plain": {
                "example": "La carte n'est pas affichée."
              }
            }
          },
          "CarteData":{
            "description": "La carte à créer.",
            "type": "object",
            "properties": {
                    "id_api": {
                      "type": "string",
                      "description": "Le numéro de la carte",
                      "example": "aaab"
                    },
                    "etat": {
                      "type": "string",
                      "description": "L'état de la carte",
                      "enum": ["neuf", "occasoon", "abimée"],
                      "example": "neuf"
                    },
                    "desc_etat": {
                      "type": "string",
                      "description": "La description de l'état de la carte",
                      "example": "Très bon état. Aucune éraflure"
                    },
                    "statut": {
                      "type": "string",
                      "description": "Le statut de la carte",
                      "enum": ["collectée", "en échange", "souhaitée"],
                      "example": "collectée"
                    },
                    "type": {
                      "type": "string",
                      "description": "Le type de la carte",
                      "enum": ["reverse", "holo", "rien"]
                    },
                    "quantite": {
                      "type": "integer",
                      "description": "La quantité de la carte",
                      "example": 1
                    },
                    "serie": {
                      "type": "string",
                      "description": "La série de la carte",
                      "enum": [
                        "écarlate et violet",
                        "épée et bouclier",
                        "soleil et lune",
                        "xy",
                        "noir et blanc"
                      ],
                      "example": "xy"
                    }
                  },
                  "required": [
                    "id_api",
                    "etat",
                    "desc_etat",
                    "statut",
                    "type",
                    "quantite",
                    "serie"
                  ]
                
          },
        "CarteValidationErreur": {
          "description": "Echec de la création.",
          "content": {
            "text/plain": {
              "example": "La carte n'a pas été créée."
            }
          }
        },
          "DresseurSupprime":{
            "description": "Le dresseur a été supprimé.",
            "content": {
              "text/plain": {
                "example": "Le dresseur a été supprimé."
              }
            }
          },
          "DresseurEstPasAffiche":{
            "description": "Le dresseur n'a pas été affiché.",
            "content":{
                "text/plain":{
                "example": "Le dresseur ne s'affiche pas."
              }
            }
          },
          "connexionErreur":{
            "description": "Mots de passe ou pseudo incorrect",
            "content":{
                "text/plain":{
                "example": "Connexion échouée, veuillez retenter."
              }
            }
          },
          "connexionEchouee": {
            "description": "Mots de passe ou pseudo incorrect",
            "content":{
                "text/plain":{
                "example": "Mots de passe ou pseudo incorrect."
              }
            }
          },
          "connexion": {
            "type": "object",
            "properties": {
              "pseudo": {
                "type": "string",
                "description": "Le pseudo du dresseur",
                "example": "Nerak"
              },
              "mot_de_passe": {
                "type": "string",
                "description": "Le mot de passe du compte dresseur",
                "example": "unMotDePasse88"
              }
            },
            "required": ["pseudo", "mot_de_passe"]
          },
          "deconnexionReussie": {
            "description": "Déconnexion réussie.",
            "content":{
                "text/plain":{
                "example": "Déconnexion réussie."
                }
              }
            },
            "deconnexionEchouee": {
              "description": "Déconnexion échouée.",
              "content":{
                "text/plain":{
                "example": "Échec de la déconnexion. Une erreur interne s'est produite. Veuillez contacter le support technique pour plus d'assistance."
                }
              }
            },
          "connexionReussie": {
            "type": "object",
            "example": "Connexion réussie"
            },
          
          "Dresseur": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "",
                "example": "7fe91a9a41bc839033eedf0f"
              },
              "nom": {
                "type": "string",
                "description": "",
                "maxlength": 40,
                "example": "Fonseca"
              },
              "prenom": {
                "type": "string",
                "description": "",
                "maxlength": 40,
                "example": "Carina"
              },
              "pseudo": {
                "type": "string",
                "description": "",
                "maxlength": 40,
                "example": "AniraC"
              },
              "email": {
                "type": "string",
                "description": "",
                "example": "adresse@email.ch"
              },
              "age": {
                "type": "integer",
                "description": "",
                "minimum": 1,
                "maximum": 200,
                "example": 25
              },
              "ville": {
                "type": "string",
                "description": "",
                "maxlength": 60,
                "example": "Genève"
              },
              "image":{
                "type": "string",
                "description": "",
                "example": "https://p1.hiclipart.com/preview/553/126/513/pikachu-i-choose-you-pikachu-icon-png-icon.jpg"
            }
            },
            "required": [
              "id",
              "nom",
              "prenom",
              "pseudo",
              "email",
              "mot_de_passe",
              "age",
              "ville"
            ]
          },
          "DresseurData": {
            "type": "object",
            "properties": {
              "nom": {
                "type": "string",
                "description": "",
                "maxlength": 40,
                "example": "Fonseca"
              },
              "prenom": {
                "type": "string",
                "description": "",
                "maxlength": 40,
                "example": "Carina"
              },
              "mot_de_passe": {
                "type": "string",
                "description": "",
                "example": "unMotDePasse32"
              },
              "pseudo": {
                "type": "string",
                "description": "",
                "maxlength": 40,
                "example": "AniraC"
              },
              "email": {
                "type": "string",
                "description": "",
                "example": "adresse@email.ch"
              },
              "age": {
                "type": "number",
                "description": "",
                "minimum": 1,
                "maximum": 200,
                "example": 25
              },
              "ville": {
                "type": "string",
                "description": "",
                "maxlength": 60,
                "example": "Genève"
              } 
            },
            "required": ["prenom", "nom","pseudo", "email", "age", "ville"]
          
          },
          "DresseurDataPartiel": {
            "type": "object",
            "properties": {
              "nom": {
                "type": "string",
                "description": "",
                "minlength": 3,
                "maxlength": 40,
                "example": "Fonseca"
              },
              "prenom": {
                "type": "string",
                "description": "",
                "minlength": 3,
                "maxlength": 15,
                "example": "Carina"
              },
              "pseudo": {
                "type": "string",
                "description": "",
                "example": "AniraC"
              },
              "email": {
                "type": "string",
                "description": "",
                "example": "adresse@email.ch"
              },
              "mot_de_passe": {
                "type": "string",
                "description": "",
                "example": "unMotDePasse32"
              },
              "age": {
                "type": "number",
                "description": "",
                "minimum": 0,
                "maximum": 100,
                "example": 25
              },
              "ville": {
                "type": "string",
                "description": "",
                "example": "Genève"
              }
            }
          },
          "Carte": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "L'identifiant unique de la carte",
                "example": "7xy10-117"
              },
              "id_api": {
                "type": "string",
                "description": "L'identifiant de l'api",
                "example": "aaab",
                "unique": true
              },
              "etat": {
                "type": "string",
                "description": "L'état unique de la carte",
                "enum": ["neuve", "excellente", "très bonne", "bonne", "moyenne", "mauvaise"],
                "example": "neuve",
                "unique": true
              },
              "desc_etat": {
                "type": "string",
                "description": "La description de l'état unique de la carte",
                "maxlength": 255,
                "example": "Très bon état. Aucune éraflure",
                "unique": true
              },
              "statut": {
                "type": "string",
                "description": "Le statut de la carte",
                "enum": ["collectée","souhaitée"],
                "example": "collectée"
              },
              "type": {
                "type": "string",
                "description": "Le type unique de la carte",
                "enum": ["normale", "reverse", "holo"],
                "unique": true
              },
              "quantite": {
                "type": "number",
                "description": "La quantité de la carte",
                "minimum":1,
                "maximum": 1000,
                "example": 1
              },
              "dresseur_id":{
                "type": "string",
                "description": "L'identifiant unique d'un dresseur qui possède la carte",
                "example": "7fe91a9a41bc839033eedf0f"
              },
              "dresseur":{
                "type": "string",
                "$ref": "#/components/schemas/Dresseur"
              }
            },
               "required": [
                "id",
              "id_api",
              "etat",
              "desc_etat",
              "statut",
              "type",
              "quantite",
              "dresseur_id"
            ]
          },
          "CarteDataPartial": {
            "type": "object",
            "properties": {
              "etat": {
                "type": "string",
                "description": "L'état unique de la carte",
                "enum": ["neuve", "excellente", "très bonne", "bonne", "moyenne", "mauvaise"],
                "example": "neuve",
                "unique": true
              },
              "desc_etat": {
                "type": "string",
                "description": "La description de l'état unique de la carte",
                "maxlength": 255,
                "example": "Très bon état. Aucune éraflure",
                "unique": true
              },
              "statut": {
                "type": "string",
                "description": "Le statut de la carte",
                "enum": ["collectée","souhaitée"],
                "example": "collectée"
              },
              "type": {
                "type": "string",
                "description": "Le type unique de la carte",
                "enum": ["normale", "reverse", "holo"],
                "unique": true
              },
              "quantite": {
                "type": "number",
                "description": "La quantité de la carte",
                "minimum":1,
                "maximum": 1000,
                "example": 1
              },
              "dresseur_id":{
                "type": "string",
                "description": "L'identifiant unique d'un dresseur qui possède la carte",
                "example": "7fe91a9a41bc839033eedf0f"
              }
            }
          },
          "CarteEchange": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "L'identifiant unique de l'élément d'échange de la carte",
                "example": "7xy10-117"
              },
              "carte_id": {
                "type": "string",
                "description": "L'identifiant unique de la carte qui va être échangée",
                "example": "aaab",
                "unique":true
              },
              "carte":{
                "type": "string",
                "$ref": "#/components/schemas/Carte"
              },
              "echange_id":{
                "type": "string",
                "description": "L'identifiant unique de l'échange qui va concerner une ou plusieurs cartes",
                "example": "7fe91a9a41bc839033eedf0f"
              },
              "echange":{
                "type": "string",
                "$ref": "#/components/schemas/Echange"
              }
            },
            "required": [
              "id",
              "carte_id",
              "echange_id"
            ]
          },
          "Echange": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "L'identifiant unique de l'échange",
                "example": "7fe91a9a41bc839033eedf0f"
              },
              "date": {
                "type": "string",
                "description": "La date unique de l'échange",
                "format": "data-time",
                "example": "2023-01-01T00:00:00Z",
                "unique": true
              },
              "etat": {
                "type": "string",
                "description": "L'état de l'échange",
                "enum": ["accepte", "attente","refus"],
                "example": "attente"
              },
              "dresseur_cree_id": {
                "type": "string",
                "description": "L'identifiant unique du dresseur qui créé l'échange",
                "$ref": "#/components/schemas/Dresseur",
                "unique": true
            },
            "dresseur_concerne_id": {
              "type": "string",
              "description": "L'identifiant unique du dresseeur concerné par l'échange",
              "$ref": "#/components/schemas/Dresseur",
              "unique": true
            },
            "required": ["id", "date","dresseur_cree_id", "dresseur_concerne_id"]
          },
          "EchangeData": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "L'identifiant unique de l'échange",
                "example": "7fe91a9a41bc839033eedf0f"
              },
              "etat": {
                "type": "string",
                "description": "L'état de l'échange",
                "enum": ["accepte", "attente","refus"],
                "example": "attente"
              },
              "dresseur_cree_id": {
                "type": "string",
                "description": "L'identifiant unique du dresseur qui créé l'échange",
                "$ref": "#/components/schemas/Dresseur",
                "unique": true
            },
            "dresseur_concerne_id": {
              "type": "string",
              "description": "L'identifiant unique du dresseeur concerné par l'échange",
              "$ref": "#/components/schemas/Dresseur",
              "unique": true
            }
          },
          "Message": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "",
                "example": "7fe91a9a41bc839033eedf0f"
              },
              "date": {
                "type": "string",
                "description": "",
                "format": "data-time",
                "example": "2020-01-02T10:00:00.000Z"
              },
              "contenu": {
                "type": "string",
                "description": "",
                "example": "Salut!"
              },
              "expéditeur": {
                "type": "string",
                "description": "Celui qui envoie le message.",
                "example": "Nerak"
              },
              "destinataire": {
                "type": "string",
                "description": "Celui qui reçoit le message.",
                "example": "Salocin"
              }
            },
            "required": ["id", "date", "contenu", "destinataire", "expéditeur"]
          }   
        },
  
        "securitySchemes": {
          "authConnexion": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
          }
        },
        "securityDefinitions": {
          "JWT": {
            "type": "apiKey",
            "in": "query",
            "name": "access_token"
          }
        }
      }
    }
        },
        "Message": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "",
              "example": "7fe91a9a41bc839033eedf0f"
            },
            "date": {
              "type": "string",
              "description": "",
              "format": "data-time",
              "example": "2020-01-02T10:00:00.000Z"
            },
            "contenu": {
              "type": "string",
              "description": "",
              "example": "Salut!"
            },
            "expéditeur": {
              "type": "string",
              "description": "Celui qui envoie le message.",
              "example": "Nerak"
            },
            "destinataire": {
              "type": "string",
              "description": "Celui qui reçoit le message.",
              "example": "Salocin"
            }
          },
          "required": ["id", "date", "contenu", "destinataire", "expéditeur"]
        }   
      },

      "securitySchemes": {
        "authConnexion": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "securityDefinitions": {
        "JWT": {
          "type": "apiKey",
          "in": "query",
          "name": "access_token"
        }
      }
    }
  }

