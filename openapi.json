{
  "openapi": "3.0.3",
  "info": {
    "title": "Pokétroc",
    "description": "Application qui permet aux utilisateurs de lister leurs cartes pokémon, de les échanger ainsi que de chercher des cartes qu’ils aimeraient acquérir.",
    "version": "1.1.0",
    "contact": { "url": "https://github.com/nicolaswunderle/poketroc" }
  },
  "servers": [{ "url": "https://poketroc.onrender.com/api" }],
  "tags": [
    {
      "name": "dresseur",
      "description": ""
    },
    {
      "name": "carte",
      "description": ""
    },
    {
      "name": "échange",
      "description": ""
    },
    {
      "name": "message",
      "description": ""
    }
  ],
  "paths": {
    "/cartes": {
      "post": {
        "summary": "Créer une carte",
        "tags": ["carte"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarteData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Création réussie.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carte"
                }
              }
            }
          },
          "422": {
            "description": "Échec de la création.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/CarteValidationErreur"
                }
              }
            }
          }
        }
      }
    },
    "/cartes/{carteId}": {
      "get": {
        "summary": "Afficher carte dresseur",
        "tags": ["carte"],
        "parameters": [
          {
            "name": "carteId",
            "in": "path",
            "description": "Identifiant de la carte",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La carte a été affichée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carte"
                }
              }
            }
          },
          "404": {
            "description": "La carte n'est pas affichée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/CartePasAffichee"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Modifier partiellement la carte du dresseur",
        "tags": ["carte"],
        "parameters": [
          {
            "name": "carteId",
            "in": "path",
            "description": "Identifiant de la carte",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarteDataPartiel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Modification réussie.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carte"
                }
              }
            }
          },
          "404": {
            "description": "La carte n'a pas été modifiée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartePasModifiee"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Supprimer la carte",
        "tags": ["carte"],
        "parameters": [
          {
            "name": "carteId",
            "in": "path",
            "description": "Identifiant de la carte",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "La carte a été correctement supprimée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/CarteSupprimee"
                }
              }
            }
          },
          "404": {
            "description": "La carte n'a pas été supprimée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/CartePasSupprimee"
                }
              }
            }
          }
        }
      }
    },
    "/cartes/{dresseurId}?statut={collectee, souhaitee}&page={number}&pageSize={number}": {
      "get": {
        "summary": "Afficher toutes les cartes du dresseur en fonction du statut.",
        "tags": ["carte"],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "path",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statut",
            "in": "query",
            "description": "Statut des cartes (collectee, souhaitee)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["collectee", "souhaitee"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Numéro de la page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Taille de la page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des cartes du dresseur avec le statut spécifié est affichée corectement.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Carte"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Liste des cartes du dresseur avec le statut spécifié n'est pas affichée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ListeCartePasAffichee"
                }
              }
            }
          }
        }
      }
    },
    "/dresseurs": {
      "post": {
        "summary": "Inscription à l'application",
        "tags": ["dresseur"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DresseurData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Inscription réussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dresseur"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/DresseurValidationErreur"
          }
        }
      }
    },
    "/dresseurs/connexion": {
      "post": {
        "summary": "Connexion au compte dresseur",
        "tags": ["dresseur"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/connexion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Connexion réussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/connexionReussie"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/connexionEchouee"
          },
          "422": {
            "$ref": "#/components/responses/connexionErreur"
          }
        }
      },

      "delete": {
        "summary": "Deconnexion au compte dresseur",
        "tags": ["dresseur"],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "204": {
            "description": "Déconnexion réussie"
          },
          "404": {
            "$ref": "#/components/responses/deconnexionEchouee"
          }
        }
      }
    },
    "dresseurs/{dresseurId}": {
      "get": {
        "summary": "Afficher le dresseur",
        "tags": ["dresseur"],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "path",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Le dresseur est affiché",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dresseur"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/DresseurEstPasAffiche"
          }
        }
      },
      "delete": {
        "summary": "Supprimer le compte du dresseur",
        "tags": ["dresseur"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "path",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Le dresseur a été supprimé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/DresseurSupprime"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/DresseurIntrouvable"
          }
        }
      }
    },
    "dresseurs/proches/{coordonnéesGeographique}?page={number}&pageSize={number}": {
      "get": {
        "summary": "Afficher les dresseurs proches",
        "tags": ["dresseur"],
        "parameters": [
          {
            "name": "coordonnéesGeographique",
            "in": "path",
            "description": "Coordonnées géographiques du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Numéro de la page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Taille de la page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Liste des dresseurs proches est affichée.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DresseurMap"
                  }
                }
              }
            }
          },
          "503": {
            "$ref": "#/components/responses/ErreurConnexion"
          }
        }
      }
    },
    "poketroc/profil/modification": {
      "/{dresseur.id}/modification": {
        "patch": {
          "summary": "Modifier partiellement le profil du dresseurs",
          "tags": ["dresseur"],
          "parameters": [
            {
              "name": "dresseurId",
              "in": "path",
              "description": "Identifiant du dresseur",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DresseurDataPartiel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Dresseur"
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/ModificationErreur"
            }
          }
        }
      },
      "/{dresseur.id}/deck": {
        "get": {
          "summary": "Afficher le deck du dresseur",
          "tags": ["carte"],
          "parameters": [
            {
              "name": "num_carte",
              "in": "query",
              "description": "",
              "schema": {
                "type": "integer",
                "example": 114,
                "minimum": 0,
                "maximum": 1000
              }
            },
            {
              "name": "quantite",
              "in": "query",
              "description": "",
              "schema": {
                "type": "integer",
                "example": 1
              }
            },
            {
              "name": "série",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "écarlate et violet",
                  "épée et bouclier",
                  "soleil et lune",
                  "xy",
                  "noir et blanc"
                ],
                "example": "xy"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Carte"
                    }
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/DeckErreur"
            }
          }
        }
      },
      "/echanges": {
        "post": {
          "summary": "Créer un échange",
          "tags": ["échange"],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EchangeData"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "L'échange a été crée avec succès.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Echange"
                  }
                }
              }
            },
            "422": {
              "description": "L'échange n'a pas été crée.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/responses/EchangeValidationErreur"
                  }
                }
              }
            }
          }
        }
      },
      "/echanges/{echangeId}": {
        "get": {
          "summary": "Afficher un échange",
          "tags": ["échange"],
          "parameters": [
            {
              "name": "echangeId",
              "in": "path",
              "description": "Identifiant de l'échange.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "L'échange est affiché.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Echange"
                  }
                }
              }
            },
            "404": {
              "description": "L'échange n'est pas affiché.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/responses/EchangePasAffiche"
                  }
                }
              }
            }
          }
        },
        "patch": {
          "summary": "Modifier quelques informations d'un échange",
          "tags": ["échange"],
          "parameters": [
            {
              "name": "echangeId",
              "in": "path",
              "description": "Identifiant de l'échange.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EchangeData"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "L'échange a été modifié.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Echange"
                  }
                }
              }
            },
            "404": {
              "description": "L'échange n'a pas pu être modifié.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/responses/EchangePasModifie"
                  }
                }
              }
            },
            "422": {
              "description": "L'échange n'a pas pu être modifié.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/responses/EchangeValidationErreur"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "summary": "Supprimer un échange",
          "tags": ["échange"],
          "parameters": [
            {
              "name": "echangeId",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "L'échange a été supprimé avec succès",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/responses/EchangeSupprime"
                  },
                  "404": {
                    "description": "L'échange n'a pas été supprimé.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/responses/EchangePasSupprime"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/echanges/{dresseurId}": {
        "get": {
          "summary": "Afficher tous les échanges du dresseur",
          "tags": ["échange"],
          "parameters": [
            {
              "name": "dresseurId",
              "in": "path",
              "description": "Identifiant du dresseur",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Les échanges sont affichés.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Echange"
                  }
                }
              }
            },
            "404": {
              "description": "Les échanges ne sont pas affichés.",
              "$ref": "#/components/responses/EchangesPasAffiche"
            }
          }
        }
      },
      "/echanges/proposes?tri={nouveaute,pertinence}&page={number}&pageSize={number}": {
        "get": {
          "summary": "Afficher tous les échanges proposés",
          "tags": ["échange"],
          "parameters": [
            {
              "name": "tri",
              "in": "query",
              "description": "Critère de tri des échanges (nouveaute, pertinence)",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["nouveaute", "pertinence"]
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Numéro de la pages",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Taille de la page",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "La liste des échanges proposés est affichée.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Echange"
                  }
                }
              }
            },
            "404": {
              "description": "La liste des échanges proposés n'est pas affichée.",
              "$ref": "#/components/responses/EchangesPasTrouves"
            }
          }
        }
      },
      "/echanges/{dresseurId}?etat={accepte, attente, refuse}": {
        "get": {
          "summary": "Afficher les échanges du dresseur en fonction de l'état",
          "tags": ["échange"],
          "parameters": [
            {
              "name": "dresseurId",
              "in": "query",
              "description": "Identifiant du dresseur",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "état",
              "in": "query",
              "description": "État des échanges (accepte, attente, refuse)",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["accepte", "attente", "refuse"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "La Liste des échanges du dresseur en fonction de l'état.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Echange"
                  }
                }
              }
            },
            "404": {
              "description": "La Liste des échanges du dresseur en fonction de l'état n'est pas affichée.",
              "$ref": "#/components/responses/EchangesPasAffiche"
            }
          }
        }
      },
      "/messages/{echangeId}": {
        "get": {
          "summary": "Afficher une discution",
          "tags": ["message"],
          "parameters": [
            {
              "name": "echangeId",
              "in": "path",
              "description": "Identifiant de l'échange.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Numéro de la page",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Taille de la page",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Discution affiché",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Message"
                    }
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/DiscutionIntrouvable"
            }
          }
        }
      },
      "/messages/{messageId}": {
        "delete": {
          "summary": "Supprimer un message",
          "tags": ["message"],
          "parameters": [
            {
              "name": "messageId",
              "in": "path",
              "description": "Identifiant du message",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Le message à été supprimé",
              "content": {
                "text/plain": {
                  "schema": {
                    "example": "Le message à été supprimé"
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/MessageIntrouvable"
            }
          }
        }
      },
      "messages": {
        "post": {
          "summary": "Créer un message",
          "tags": ["message"],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Message créé avec succès.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/MessageErreur"
            },
            "422": {
              "$ref": "#/components/responses/DestinataireErreur"
            }
          }
        }
      }
    },
    "/{dresseur.id}/modification": {
      "patch": {
        "summary": "Modifier partiellement le profil du dresseurs",
        "tags": ["dresseur"],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "path",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DresseurDataPartiel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dresseur"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModificationErreur"
          }
        }
      }
    },
    "/{dresseur.id}/deck": {
      "get": {
        "summary": "Afficher le deck du dresseur",
        "tags": ["carte"],
        "parameters": [
          {
            "name": "num_carte",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "example": 114,
              "minimum": 0,
              "maximum": 1000
            }
          },
          {
            "name": "quantite",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "série",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "écarlate et violet",
                "épée et bouclier",
                "soleil et lune",
                "xy",
                "noir et blanc"
              ],
              "example": "xy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Carte"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/DeckErreur"
          }
        }
      }
    },
    "/echanges": {
      "post": {
        "summary": "Créer un échange",
        "tags": ["échange"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EchangeData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "L'échange a été crée avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Echange"
                }
              }
            }
          },
          "422": {
            "description": "L'échange n'a pas été crée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/EchangeValidationErreur"
                }
              }
            }
          }
        }
      }
    },
    "/echanges/{echangeId}": {
      "get": {
        "summary": "Afficher un échange",
        "tags": ["échange"],
        "parameters": [
          {
            "name": "echangeId",
            "in": "path",
            "description": "Identifiant de l'échange.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "L'échange est affiché.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Echange"
                }
              }
            }
          },
          "404": {
            "description": "L'échange n'est pas affiché.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/EchangePasAffiche"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Modifier quelques informations d'un échange",
        "tags": ["échange"],
        "parameters": [
          {
            "name": "echangeId",
            "in": "path",
            "description": "Identifiant de l'échange.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EchangeData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "L'échange a été modifié.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Echange"
                }
              }
            }
          },
          "404": {
            "description": "L'échange n'a pas pu être modifié.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/EchangePasModifie"
                }
              }
            }
          },
          "422": {
            "description": "L'échange n'a pas pu être modifié.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/EchangeValidationErreur"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Supprimer un échange",
        "tags": ["échange"],
        "parameters": [
          {
            "name": "echangeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "L'échange a été supprimé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/EchangeSupprime"
                },
                "404": {
                  "description": "L'échange n'a pas été supprimé.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/responses/EchangePasSupprime"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/echanges/{dresseurId}": {
      "get": {
        "summary": "Afficher tous les échanges du dresseur",
        "tags": ["échange"],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "path",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Les échanges sont affichés.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Echange"
                }
              }
            }
          },
          "404": {
            "description": "Les échanges ne sont pas affichés.",
            "$ref": "#/components/responses/EchangesPasAffiche"
          }
        }
      }
    },
    "/echanges/proposes?tri={nouveaute,pertinence}&page={number}&pageSize={number}": {
      "get": {
        "summary": "Afficher tous les échanges proposés",
        "tags": ["échange"],
        "parameters": [
          {
            "name": "tri",
            "in": "query",
            "description": "Critère de tri des échanges (nouveaute, pertinence)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["nouveaute", "pertinence"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Numéro de la pages",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Taille de la page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des échanges proposés est affichée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Echange"
                }
              }
            }
          },
          "404": {
            "description": "La liste des échanges proposés n'est pas affichée.",
            "$ref": "#/components/responses/EchangesPasTrouves"
          }
        }
      }
    },
    "/echanges/{dresseurId}?etat={accepte, attente, refuse}": {
      "get": {
        "summary": "Afficher les échanges du dresseur en fonction de l'état",
        "tags": ["échange"],
        "parameters": [
          {
            "name": "dresseurId",
            "in": "query",
            "description": "Identifiant du dresseur",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "état",
            "in": "query",
            "description": "État des échanges (accepte, attente, refuse)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["accepte", "attente", "refuse"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La Liste des échanges du dresseur en fonction de l'état.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Echange"
                }
              }
            }
          },
          "404": {
            "description": "La Liste des échanges du dresseur en fonction de l'état n'est pas affichée.",
            "$ref": "#/components/responses/EchangesPasAffiche"
          }
        }
      }
    },
    "/messages/{echangeId}":{
      "get": {
          "summary": "Afficger une discussion",
          "tags": ["message"],
          "parameters": [
          {
            "name": "echangeId",
            "in": "path",
            "description": "Identifiant de la carte",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Discution affiché",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/DiscutionIntrouvable"
          }
        }
      }
    },
    "/messages/{messageId}": {
      "delete": {
        "summary": "Supprimer un message",
        "tags": ["message"],
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Identifiant du message",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Le message à été supprimé",
            "content": {
              "text/plain": {
                "schema": {
                  "example": "Le message à été supprimé"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/MessageIntrouvable"
          }
        }
      }
    },
    "messages": {
      "post": {
        "summary": "Créer un message",
        "tags": ["message"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message créé avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/MessageErreur"
          },
          "422": {
            "$ref": "#/components/responses/DestinataireErreur"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "DresseurValidationErreur": {
        "description": "Echec de l'inscription.",
        "content": {
          "text/plain": {
            "example": "Inscription échouée."
          }
        }
      },
      "CarteValidationErreur": {
        "description": "Echec de la création.",
        "content": {
          "text/plain": {
            "example": "La carte n'a pas été créée."
          }
        }
      },
      "CartePasAffichee": {
        "description": "La carte n'est pas affichée.",
        "content": {
          "text/plain": {
            "example": "La carte n'est pas affichée."
          }
        }
      },
      "connexionReussie": {
        "type": "object",
        "example": "Connexion réussie"
      },
      "connexionErreur": {
        "description": "Mots de passe ou pseudo incorrect",
        "content": {
          "text/plain": {
            "example": "Connexion échouée, veuillez retenter."
          }
        }
      },
      "connexionEchouee": {
        "description": "Mots de passe ou pseudo incorrect",
        "content": {
          "text/plain": {
            "example": "Mots de passe ou pseudo incorrect."
          }
        }
      },
      "deconnexionReussie": {
        "description": "Déconnexion réussie.",
        "content": {
          "text/plain": {
            "example": "Déconnexion réussie."
          }
        }
      },
      "deconnexionEchouee": {
        "description": "Déconnexion échouée.",
        "content": {
          "text/plain": {
            "example": "Échec de la déconnexion. Une erreur interne s'est produite. Veuillez contacter le support technique pour plus d'assistance."
          }
        }
      },
      "DresseurSupprime": {
        "description": "Le dresseur a été supprimé.",
        "content": {
          "text/plain": {
            "example": "Le dresseur a été supprimé."
          }
        }
      },
      "DresseurEstPasAffiche": {
        "description": "Le dresseur n'a pas été affiché.",
        "content": {
          "text/plain": {
            "example": "Le dresseur ne s'affiche pas."
          }
        }
      },
      "ErreurConnexion": {
        "description": "Erreur de connexion.",
        "content": {
          "text/plain": {
            "example": " Le serveur n'est pas disponible en raison d'une surcharge temporaire ou de travaux de maintenance."
          }
        }
      },
      "ModificationErreur": {
        "description": "La modification n'a pas été validé",
        "content": {
          "text/plain": {
            "example": "La modification n'a pas été effectué"
          }
        }
      },
      "DresseurIntrouvable": {
        "description": "Le dresseur est introuvable",
        "content": {
          "text/plain": {
            "example": "Ce dresseur est introuvable"
          }
        }
      },
      "DeckErreur": {
        "description": "Erreur dans l'affichage du deck",
        "content": {
          "text/plain": {
            "example": "Une erreur est survenu dans l'affichage de votre deck"
          }
        }
      },
      "DestinataireErreur": {
        "description": "Destinataire introuvable.",
        "content": {
          "text/plain": {
            "example": "Le destinataire n'a pas été trouvé"
          }
        }
      },
      "MessageErreur": {
        "description": "Le message n'a pas été créée",
        "content": {
          "text/plain": {
            "example": "Le message n'a pas pu être créée"
          }
        }
      },
      "MessageIntrouvable": {
        "description": "Message introuvable",
        "content": {
          "text/plain": {
            "example": "Le message est introuvable"
          }
        }
      },
      "DiscutionIntrouvable": {
        "description": "Discution introuvable",
        "content": {
          "text/plain": {
            "example": "La discution est introuvable"
          }
        }
      }
    },
    "schemas": {
      "DresseurMap": {
        "type": "object",
        "properties": {
          "pseudo": {
            "type": "string",
            "description": "",
            "maxlength": 40,
            "example": "AniraC"
          },
          "localisation": {
            "type": "Point",
            "description": "",
            "example": "[ -73.856077, 40.848447 ]"
          },
          "image": {
            "type": "string",
            "description": "",
            "example": "https://p1.hiclipart.com/preview/553/126/513/pikachu-i-choose-you-pikachu-icon-png-icon.jpg"
          }
        }
      },
      "CarteData": {
        "description": "La carte à créer.",
        "type": "object",
        "properties": {
          "id_api": {
            "type": "string",
            "description": "Le numéro de la carte",
            "example": "aaab"
          },
          "etat": {
            "type": "string",
            "description": "L'état de la carte",
            "enum": [
              "neuve",
              "excellente",
              "très bonne",
              "bonne",
              "moyenne",
              "mauvaise"
            ],
            "example": "neuve"
          },
          "desc_etat": {
            "type": "string",
            "description": "La description de l'état de la carte",
            "example": "Très bon état. Aucune éraflure"
          },
          "statut": {
            "type": "string",
            "description": "Le statut de la carte",
            "enum": ["collectée", "en échange", "souhaitée"],
            "example": "collectée"
          },
          "type": {
            "type": "string",
            "description": "Le type de la carte",
            "enum": ["reverse", "holo", "rien"]
          },
          "quantite": {
            "type": "integer",
            "description": "La quantité de la carte",
            "example": 1
          }
        },
        "required": [
          "id_api",
          "etat",
          "desc_etat",
          "statut",
          "type",
          "quantite"
        ]
      },
      "connexion": {
        "type": "object",
        "properties": {
          "pseudo": {
            "type": "string",
            "maxlength": 40,
            "unique": true,
            "description": "",
            "example": "Nerak"
          },
          "mot_de_passe": {
            "type": "string",
            "description": "",
            "example": "unMotDePasse88"
          }
        },
        "required": ["pseudo", "mot_de_passe"]
      },
      "Dresseur": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "",
            "example": "7fe91a9a41bc839033eedf0f"
          },
          "nom": {
            "type": "string",
            "description": "",
            "maxlength": 40,
            "example": "Fonseca"
          },
          "prenom": {
            "type": "string",
            "description": "",
            "maxlength": 40,
            "example": "Carina"
          },
          "pseudo": {
            "type": "string",
            "description": "",
            "maxlength": 40,
            "example": "AniraC"
          },
          "email": {
            "type": "string",
            "description": "",
            "example": "adresse@email.ch"
          },
          "age": {
            "type": "integer",
            "description": "",
            "minimum": 1,
            "maximum": 200,
            "example": 25
          },
          "localisation": {
            "type": "Point",
            "description": "",
            "example": "[ -73.856077, 40.848447 ]"
          },
          "image": {
            "type": "string",
            "description": "",
            "example": "https://p1.hiclipart.com/preview/553/126/513/pikachu-i-choose-you-pikachu-icon-png-icon.jpg"
          }
        },
        "required": [
          "id",
          "nom",
          "prenom",
          "pseudo",
          "email",
          "mot_de_passe",
          "age",
          "localisation"
        ]
      },
      "DresseurData": {
        "type": "object",
        "properties": {
          "nom": {
            "type": "string",
            "description": "",
            "maxlength": 40,
            "example": "Fonseca"
          },
          "prenom": {
            "type": "string",
            "description": "",
            "maxlength": 40,
            "example": "Carina"
          },
          "mot_de_passe": {
            "type": "string",
            "description": "",
            "example": "unMotDePasse32"
          },
          "pseudo": {
            "type": "string",
            "description": "",
            "unique": true,
            "maxlength": 40,
            "example": "AniraC"
          },
          "email": {
            "type": "string",
            "description": "",
            "example": "adresse@email.ch"
          },
          "age": {
            "type": "number",
            "description": "",
            "minimum": 1,
            "maximum": 200,
            "example": 25
          },
          "localisation": {
            "type": "Point",
            "description": "",
            "example": "[ -73.856077, 40.848447 ]"
          }
        },
        "required": ["prenom", "nom", "pseudo", "email", "age", "localisation"]
      },
      "DresseurDataPartiel": {
        "type": "object",
        "properties": {
          "nom": {
            "type": "string",
            "description": "",
            "minlength": 3,
            "maxlength": 40,
            "example": "Fonseca"
          },
          "prenom": {
            "type": "string",
            "description": "",
            "minlength": 3,
            "maxlength": 15,
            "example": "Carina"
          },
          "pseudo": {
            "type": "string",
            "description": "",
            "example": "AniraC"
          },
          "email": {
            "type": "string",
            "description": "",
            "example": "adresse@email.ch"
          },
          "mot_de_passe": {
            "type": "string",
            "description": "",
            "example": "unMotDePasse32"
          },
          "age": {
            "type": "number",
            "description": "",
            "minimum": 1,
            "maximum": 200,
            "example": 25
          },
          "localisation": {
            "type": "Point",
            "description": "",
            "example": "[ -73.856077, 40.848447 ]"
          }
        }
      },
      "Carte": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "L'identifiant unique de la carte",
            "example": "7xy10-117"
          },
          "id_api": {
            "type": "string",
            "description": "L'identifiant de l'api",
            "example": "aaab",
            "unique": true
          },
          "etat": {
            "type": "string",
            "description": "L'état unique de la carte",
            "enum": [
              "neuve",
              "excellente",
              "très bonne",
              "bonne",
              "moyenne",
              "mauvaise"
            ],
            "example": "neuve",
            "unique": true
          },
          "desc_etat": {
            "type": "string",
            "description": "La description de l'état unique de la carte",
            "maxlength": 255,
            "example": "Très bon état. Aucune éraflure",
            "unique": true
          },
          "statut": {
            "type": "string",
            "description": "Le statut de la carte",
            "enum": ["collectée", "souhaitée"],
            "example": "collectée"
          },
          "type": {
            "type": "string",
            "description": "Le type unique de la carte",
            "enum": ["normale", "reverse", "holo"],
            "unique": true
          },
          "quantite": {
            "type": "number",
            "description": "La quantité de la carte",
            "minimum": 1,
            "maximum": 1000,
            "example": 1
          },
          "dresseur_id": {
            "type": "string",
            "description": "L'identifiant unique d'un dresseur qui possède la carte",
            "example": "7fe91a9a41bc839033eedf0f"
          },
          "dresseur": {
            "type": "string",
            "$ref": "#/components/schemas/Dresseur"
          }
        },
        "required": [
          "id",
          "id_api",
          "etat",
          "desc_etat",
          "statut",
          "type",
          "quantite",
          "dresseur_id"
        ]
      },
      "CarteDataPartial": {
        "type": "object",
        "properties": {
          "etat": {
            "type": "string",
            "description": "L'état unique de la carte",
            "enum": [
              "neuve",
              "excellente",
              "très bonne",
              "bonne",
              "moyenne",
              "mauvaise"
            ],
            "example": "neuve",
            "unique": true
          },
          "desc_etat": {
            "type": "string",
            "description": "La description de l'état unique de la carte",
            "maxlength": 255,
            "example": "Très bon état. Aucune éraflure",
            "unique": true
          },
          "statut": {
            "type": "string",
            "description": "Le statut de la carte",
            "enum": ["collectée", "souhaitée"],
            "example": "collectée"
          },
          "type": {
            "type": "string",
            "description": "Le type unique de la carte",
            "enum": ["normale", "reverse", "holo"],
            "unique": true
          },
          "quantite": {
            "type": "number",
            "description": "La quantité de la carte",
            "minimum": 1,
            "maximum": 1000,
            "example": 1
          },
          "dresseur_id": {
            "type": "string",
            "description": "L'identifiant unique d'un dresseur qui possède la carte",
            "example": "7fe91a9a41bc839033eedf0f"
          }
        }
      },
      "CarteEchange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "",
            "example": "7fe91a9a41bc839033eedf0f"
          },
          "id_api": {
            "type": "string",
            "description": "",
            "example": "aaab",
            "unique": true
          },
          "etat": {
            "type": "string",
            "description": "",
            "enum": [
              "neuve",
              "excellente",
              "très bonne",
              "bonne",
              "moyenne",
              "mauvaise"
            ],
            "example": "neuve",
            "unique": true
          },
          "desc_etat": {
            "type": "string",
            "description": "",
            "maxlength": 255,
            "exemple": "Très bon état. Aucune éraflure",
            "unique": true
          },
          "type": {
            "type": "string",
            "description": "",
            "enum": ["normale", "reverse", "holo"],
            "unique": true
          },
          "possedee_par": {
            "type": "string",
            "description": "",
            "example": "7fe91a9a41bc839033eedf0f"
          },
          "localisation": {
            "type": "Point",
            "description": "",
            "example": "[ -73.856077, 40.848447 ]"
          }
        },
        "required": [
          "id",
          "id_api",
          "etat",
          "desc_etat",
          "type",
          "possedee_par",
          "localisation"
        ]
      },
      "Echange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "",
            "example": "7fe91a9a41bc839033eedf0f"
          },
          "date": {
            "type": "string",
            "description": "",
            "format": "data-time",
            "example": "2023-01-01T00:00:00Z",
            "unique": true
          },
          "etat": {
            "type": "string",
            "description": "",
            "enum": ["accepte", "attente", "refus"],
            "example": "attente"
          },
          "dresseur_cree_id": {
            "type": "string",
            "description": "",
            "$ref": "#/components/schemas/Dresseur",
            "unique": true
          },
          "dresseur_concerne_id": {
            "type": "string",
            "description": "",
            "$ref": "#/components/schemas/Dresseur"
          },
          "required": ["id", "date", "dresseur_cree_id", "dresseur_concerne_id"]
        }
      },
      "EchangeData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "",
            "example": "7fe91a9a41bc839033eedf0f"
          },
          "etat": {
            "type": "string",
            "description": "",
            "enum": ["accepte", "attente", "refus"],
            "example": "attente"
          },
          "dresseur_cree_id": {
            "type": "string",
            "description": "",
            "$ref": "#/components/schemas/Dresseur",
            "unique": true
          },
          "dresseur_concerne_id": {
            "type": "string",
            "description": "",
            "$ref": "#/components/schemas/Dresseur"
          }
        },
        "required": ["id", "date", "dresseur_cree_id"]
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "",
            "example": "7fe91a9a41bc839033eedf0f"
          },
          "date": {
            "type": "string",
            "description": "",
            "format": "data-time",
            "example": "2020-01-02T10:00:00.000Z"
          },
          "contenu": {
            "type": "string",
            "description": "",
            "example": "Salut!"
          },
          "expéditeur": {
            "type": "string",
            "description": "Celui qui envoie le message.",
            "example": "Nerak"
          },
          "destinataire": {
            "type": "string",
            "description": "Celui qui reçoit le message.",
            "example": "Salocin"
          }
        },
        "required": ["id", "date", "contenu", "destinataire", "expéditeur"]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
